<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Sandstorm.io Blog</title>
		<description>Latest updates on Sandstorm.io</description>		
		<link>https://sandstorm.io</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Sandstorm Oasis is Shutting Down</title>
				<description>&lt;p&gt;On December 31st, 2019, Sandstorm’s paid hosting service, Sandstorm Oasis, will begin winding down.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Only Oasis is affected. Other Sandstorm services, such as Sandcats.io, the app market, and automatic updates for self-hosted Sandstorm, will continue to operate.&lt;/li&gt;
  &lt;li&gt;No new monthly payments will be accepted starting January 1st, 2020. Users will be able to finish out their last billing period paid in December and ending in January. Once your subscription ends, your apps will not be able to start up.&lt;/li&gt;
  &lt;li&gt;Grain owners will continue to be able to download their data or transfer it to another Sandstorm server for at least another six months, until June 31, 2020. After that, data may become permanently unavailable.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;its-time-to-go-self-hosted&quot;&gt;It’s time to go Self-Hosted&lt;/h2&gt;

&lt;p&gt;If you’re an Oasis user, fear not! You can keep using Sandstorm &lt;a href=&quot;https://sandstorm.io/install&quot;&gt;on your own server&lt;/a&gt;, and you can easily &lt;a href=&quot;https://oasis.sandstorm.io/transfers&quot;&gt;transfer all your Oasis data&lt;/a&gt; to it.&lt;/p&gt;

&lt;p&gt;Indeed, today, there’s almost no reason to prefer Oasis over a self-hosted Sandstorm server. Consider:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A similarly-priced server on Digital Ocean running Sandstorm will load apps much faster than Oasis does, while giving you 5x the storage space.&lt;/li&gt;
  &lt;li&gt;Users in Europe (of which Oasis has disproportionately many, even though we never really intended Oasis to be suitable for them) would be better-served by a European hosting provider, providing lower latency, and governed by European laws. Oasis is located in the United States.&lt;/li&gt;
  &lt;li&gt;Oasis is currently operated by one person (me). I do my best, but should something happen to me, Oasis could disappear suddenly. In contrast, your self-hosted server will never disappear no matter what I do.&lt;/li&gt;
  &lt;li&gt;Once Sandstorm is installed on your server, it’s almost entirely self-managing. Updates are installed automatically. TLS certificates are renewed automatically (with Sandcats.io). Modern VM hosts (like Digital Ocean) can perform automatic backups.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In order to make it extra-easy to transfer your data to a new server, I have added a new “Mass transfers” feature to Sandstorm. Find it by clicking the button at the top of your Grains list:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/mass-transfer.png&quot; alt=&quot;Screenshot showing the mass transfer button, located at the top of the Grains list between the &amp;quot;Restore backup...&amp;quot; button and the &amp;quot;View trash&amp;quot; button.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then follow the on-screen directions to specify a destination server, review the list of grains to transfer, and then execute the transfer.&lt;/p&gt;

&lt;p&gt;To recap:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://sandstorm.io/install&quot;&gt;Set up your own self-hosted Sandstorm server now »&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://oasis.sandstorm.io/transfers&quot;&gt;Transfer your grains from Oasis »&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;why-shut-down-oasis&quot;&gt;Why shut down Oasis?&lt;/h2&gt;

&lt;h3 id=&quot;the-story-of-the-last-few-years&quot;&gt;The story of the last few years&lt;/h3&gt;

&lt;p&gt;Sandstorm, as a company, &lt;a href=&quot;https://sandstorm.io/news/2017-02-06-sandstorm-returning-to-community-roots&quot;&gt;mostly shut down two years ago&lt;/a&gt;. The company had run out of investor money while having achieved essentially no revenue, and no hard evidence that we’d ever achieve any. While Sandstorm was popular on Hacker News, that popularity never really converted into paying users. Meanwhile, in the market where we imagined we’d find real profits – enterprise software – we’d made no real progress whatsoever. In this state, we were unable to attract new investors, and we were unable to find a company to acquire the business.&lt;/p&gt;

&lt;p&gt;The Sandstorm team was forced to look for new jobs. &lt;a href=&quot;https://sandstorm.io/news/2017-03-13-joining-cloudflare&quot;&gt;Most of us were hired by Cloudflare&lt;/a&gt;, though some chose to go elsewhere. Personally, I chose Cloudflare because I had always liked the technical culture I saw in their blog posts, and because I was interested in the project they wanted me to work on.&lt;/p&gt;

&lt;p&gt;Originally, my plan had been to keep developing Sandstorm as an open source project. I felt – and still feel – that if only some rough edges could be smoothed out and some key missing features filled in, Sandstorm could really be a plausible replacement for the set of web services people use every day. I set a goal of getting myself off of Google services by replacing the key bits with Sandstorm apps – especially email. I thought that if I could really get that working, maybe we’d be in a position to relaunch the company.&lt;/p&gt;

&lt;p&gt;I made some progress. On nights and weekends, I managed to clean up one of the hairiest rough edges of Sandstorm, &lt;a href=&quot;https://sandstorm.io/news/2017-05-08-refactoring-identities&quot;&gt;fixing the identity system&lt;/a&gt;. I also &lt;a href=&quot;https://sandstorm.io/news/2018-02-19-http-rewrite-and-more&quot;&gt;rewrote the basics of how Sandstorm handles HTTP traffic&lt;/a&gt;, making it much faster and cleaner and removing JavaScript from a part of the system where it had no business being.&lt;/p&gt;

&lt;p&gt;For a while, Oasis was costing far more to operate than it was taking in in revenue, with me making up the difference out-of-pocket. But, between the HTTP rewrite (which saved several machines), and &lt;a href=&quot;https://sandstorm.io/news/2018-08-27-discontinuing-free-plan&quot;&gt;discontinuing the Oasis free plan&lt;/a&gt;, I was able to bring things to the point where &lt;a href=&quot;https://sandstorm.io/news/2018-10-28-results-of-ending-free-plan&quot;&gt;Oasis is mildly profitable&lt;/a&gt;, earning a few hundred dollars a month.&lt;/p&gt;

&lt;p&gt;But, meanwhile, at my new job at Cloudflare, I am the lead engineer / architect of a project called &lt;a href=&quot;https://workers.cloudflare.com/&quot;&gt;Cloudflare Workers&lt;/a&gt;, a “serverless” platform that simultaneously deploys your code to 193 (and growing) locations around the world. Starting from scratch when I joined, I built a first prototype in a few months, had a &lt;a href=&quot;https://blog.cloudflare.com/introducing-cloudflare-workers/&quot;&gt;public demo&lt;/a&gt; and beta customers shortly thereafter, and &lt;a href=&quot;https://blog.cloudflare.com/cloudflare-workers-unleashed/&quot;&gt;launched it to the world&lt;/a&gt; exactly (by coincidence!) a year after joining. Today, Cloudflare Workers handles something like a million times the traffic Sandstorm ever did. Meanwhile, the team has grown from just me to a literal bus-load of people. And we’re really just getting started.&lt;/p&gt;

&lt;p&gt;As much as I love Sandstorm, it’s hard to come home from my successful day job to work on an unsuccessful side project. And so, I have been spending less and less time on Sandstorm. I still push updates every month to keep the dependencies fresh, but hadn’t worked on any new features in about a year and a half before adding mass transfers recently.&lt;/p&gt;

&lt;p&gt;Meanwhile, without leadership, the community has mostly disbanded. The only app that gets regular updates anymore is Wekan, thanks to its maintainer Lauri “xet7” Ojansivu. Jake Weisz heroically continues to carry the Sandstorm flag, reviewing app submissions (mostly from Lauri), replying to questions and bug reports, and advocating Sandstorm around the internet. A couple others lurk on the mailing list and IRC. Most people have moved on.&lt;/p&gt;

&lt;h3 id=&quot;why-not-leave-oasis-running&quot;&gt;Why not leave Oasis running?&lt;/h3&gt;

&lt;p&gt;Oasis is mildly profitable: it brings in about $1800 in revenue each month, while costing around $1400 each month between infrastructure, services, fees, and business upkeep (e.g. tax prep). Almost 200 people are paying for it and it appears most of them are in fact using it. As long as it isn’t losing money, why not let it be?&lt;/p&gt;

&lt;p&gt;First, the obvious reason: It still takes time to operate. Once a month I have to spend my Saturday afternoon testing and pushing an update. Several times, changes in dependencies have broken things, requiring debugging time. In fact, Oasis’s cluster management and storage back-end (known as “Blackrock”) is still running a build from October 2018! For reasons I’ve been unable to determine, newer builds after that point start crashing under moderate load. I’m unable to reproduce such load in a test environment, so the only way to test potential fixes is to push out a full release, watch it fail, and roll it back. After several tries, I’ve mostly given up. Luckily, this component of Oasis has had no major changes and does not have any directly-exposed attack surface, so pinning the old version is mostly fine… but it’s a fragile position to be in.&lt;/p&gt;

&lt;p&gt;On a related note, I am on call 24/7 for Oasis. It rarely breaks, but when it does, I have trouble fixing it in a timely fashion. For one example, in January, &lt;a href=&quot;https://twitter.com/SandstormIO/status/1089664116925427712&quot;&gt;an unexplained Google Cloud hiccup forced me to transfer Oasis to another zone&lt;/a&gt;, which it wasn’t designed for (whoops, yeah, it’s not multi-homed, we never got that far). It was down for hours. Luckily it was a weekend and I was at home, or it could have been days. In another incident, I discovered that GMail had been routing all my monitoring alerts (and e-mail to support@, security@, contact@, etc.) directly to spam for months.&lt;/p&gt;

&lt;p&gt;But, more important than the time burden on me is that I no longer feel good about charging money for this product. Almost all the app packages are from 2015-2016; many of those apps have had significant updates in their standalone versions since then which are missing on Sandstorm. Apps load super-slowly on Oasis. Many have significant missing features vs. their stand-alone versions, due to not having adapted to Sandstorm’s security model. And the Sandstorm UI itself remains woefully incomplete and janky. I constantly worry that most of the people paying for Oasis signed up by mistake and never noticed it on their credit card statements – that may sound far-fetched, but in fact I have had at least a few complaints from people who did just that (which I then refunded). I worry that it seems like we have European customers and I wonder if they realize Sandstorm is located in the US and may not comply with relevant European regulations. I feel embarrassed that people who haven’t read the blog assume the product is supported by full-time staff. Would Oasis still be profitable if it were only used by people who fully understand the state of the company? I’m not sure.&lt;/p&gt;

&lt;p&gt;Finally, Oasis today provides almost no advantages over self-hosting. The price of virtual servers has come down to the point where self-hosting Sandstorm on an equivalently-priced server will give you a much better experience than Oasis can. Sandstorm was always supposed to be about owning your own server anyway. In fact, in retrospect, I think we never should have created Oasis, but should instead have focused entirely on self-hosting all along.&lt;/p&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h3&gt;

&lt;p&gt;Sandstorm will continue to exist as an open source project. I personally plan to transfer my Oasis grains to a self-hosted server, and keep using it. I have to admit, building the mass transfer feature was kind of fun – I’d forgotten how little time it takes to build significant features in Meteor. And I’m still interested in self-hosting my email, if I can cobble together a decent UX. Maybe I’ll be inspired to build something on Sandstorm… we’ll see.&lt;/p&gt;

&lt;p&gt;However, after the shutdown of Oasis, the project should be understood to be a hobby project, not a business. People should no longer rely on me, working in my spare time, to safeguard your data or keep it accessible.&lt;/p&gt;

</description>
				<pubDate>Sun, 15 Sep 2019 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2019-09-15-shutting-down-oasis</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2019-09-15-shutting-down-oasis</guid>
			</item>
		
			<item>
				<title>Results of discontinuing the free plan</title>
				<description>&lt;p&gt;&lt;a href=&quot;2018-08-27-discontinuing-free-plan&quot;&gt;Recently we made the tough decision to end Sandstorm Oasis’s free plan.&lt;/a&gt; This change has now been made and the dust is settled. (If you’re affected and are unsure how to export your data, &lt;a href=&quot;2018-10-18-how-to-download-oasis-data&quot;&gt;see my previous blog post&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Today, for the purpose of transparency, I wanted to show you the results of this change.&lt;/p&gt;

&lt;p&gt;First, I’m happy to report that revenue increased more than I expected:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/revenue-post-free-plan.png&quot; alt=&quot;Graph of revenue showing when change was announced and implemented.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Timeline:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;August 27: MRR is $828. I announced decision to end the free plan on our blog and Twitter.&lt;/li&gt;
  &lt;li&gt;September 2: MRR is still $828. I updated Oasis UI to add prominent warnings for free users.&lt;/li&gt;
  &lt;li&gt;October 17: MRR has reached $1104. I flip the switch to turn off the free plan.&lt;/li&gt;
  &lt;li&gt;October 28: MRR is now $1428.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Second, server resources were reduced. In particular, utilization of Oasis’s “worker” machines (where users’ apps actually run) dropped in half:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/cpu-post-free-plan.png&quot; alt=&quot;Graph of CPU usage showing when change was implemented.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We previously had four worker VMs, each of which was a GCE “n1-highmem-2” machine costing $60.50 per month. We were able to cut two of those machines for a savings of $121.&lt;/p&gt;

&lt;p&gt;Sandstorm currently runs 13 other VMs – six others to operate Oasis itself, three to run our web site and app market, two for Sandcats.io DNS, one for monitoring and one for metrics aggregation. It’s likely that we could further consolidate some of these, although these machines run smaller-sized instances with bespoke purposes meaning it will take a lot more work for comparatively smaller savings.&lt;/p&gt;

&lt;p&gt;In August I estimated that the cost to continue operating Sandstorm (including servers and corporate maintenance) at about $1560 per month. With the server reduction, we’re now at $1439 per month – just barely above the $1428 in revenue. So, we went from a $700/month deficit ($8400/year) to break-even by making this change.&lt;/p&gt;
</description>
				<pubDate>Sun, 28 Oct 2018 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2018-10-28-results-of-ending-free-plan</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2018-10-28-results-of-ending-free-plan</guid>
			</item>
		
			<item>
				<title>How to download your Oasis data</title>
				<description>&lt;p&gt;&lt;a href=&quot;2018-08-27-discontinuing-free-plan&quot;&gt;We announced in August&lt;/a&gt; that Oasis’s free plan would be discontinued on October 14. &lt;a href=&quot;2018-08-27-discontinuing-free-plan&quot;&gt;As I explained then&lt;/a&gt;, we were forced to do this as Oasis costs $1500 per month to run, but was only earning $828 per month in revenue. I have been personally paying the remaining $700 every month to subsidize free users of the service, and I am unable to continue doing so. By limiting the service to only paying users, Oasis will be able to break even.&lt;/p&gt;

&lt;p&gt;For the past month or so, the Sandstorm UI has featured a prominent message warning that the free plan was going away:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/free-plan-discontinue-warning.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, we were unable to send an e-mail warning, as there are well over 100,000 free accounts on Oasis, the vast majority of which are abandoned. A mass e-mail would likely have landed us on spam blocklists (and rightly so, as we’d be annoying a lot of people).&lt;/p&gt;

&lt;p&gt;I had hoped that the message in the UI was prominent enough that all active users would notice it. However, it appears that some people did not see the message, and now find themselves unexpectedly unable to open their apps. I’m very sorry for this!&lt;/p&gt;

&lt;h3 id=&quot;your-data-is-still-there&quot;&gt;Your data is still there&lt;/h3&gt;

&lt;p&gt;You can still download your data. To do so, open a grain and click the “download backup” button in the top bar, which looks like a down-arrow:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/download-backup-screenshot.png&quot; alt=&quot;screenshot of download backup button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This will give you a ZIP file that contains all the data from the grain.&lt;/p&gt;

&lt;p&gt;In some cases, you will be able to open this data easily. However, many apps store their data in custom formats that you may have difficulty opening. In these cases, it’s best to use the app itself to access the data, which means you need Sandstorm. One option is to &lt;a href=&quot;/install&quot;&gt;install Sandstorm on your own server&lt;/a&gt;, but not everyone has a server available for this.&lt;/p&gt;

&lt;p&gt;As a hack, another option is to use the Sandstorm Demo itself to get temporary access to your grains. The Sandstorm Demo gives you a temporary account which you can use to run any app on the Sandstorm app market, for free. The only catch is that your demo account will be deleted after one hour – but this should be enough time to upload your grain, open it, and copy out data. In the worst case, after your demo expires, you can always start another demo to extract more data.&lt;/p&gt;

&lt;p&gt;To start a demo, &lt;strong&gt;open an incognito window&lt;/strong&gt; or log out of Oasis, so that Oasis doesn’t know you have an account already. Then, &lt;a href=&quot;https://demo.sandstorm.io&quot;&gt;visit demo.sandstorm.io&lt;/a&gt; or click the button on the &lt;a href=&quot;https://sandstorm.io&quot;&gt;Sandstorm.io home page&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/demo-button-screenshot.png&quot; alt=&quot;screenshot of demo button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the demo has started, make sure to install the app that your grain was created with. Then, visit the “Grains” tab, click “Restore backup…”, and choose the backup zip that you downloaded before.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/news/images/restore-backup-screenshot.png&quot; alt=&quot;screenshot of restore backup button&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You now have a (temporary) functioning version of your grain.&lt;/p&gt;
</description>
				<pubDate>Thu, 18 Oct 2018 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2018-10-18-how-to-download-oasis-data</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2018-10-18-how-to-download-oasis-data</guid>
			</item>
		
			<item>
				<title>Oasis free plan will be discontinued October 14</title>
				<description>&lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; This change has now taken effect. Looking for help downloading your data from Oasis? &lt;a href=&quot;2018-10-18-how-to-download-oasis-data&quot;&gt;See our latest blog post »&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Starting October 14, 2018, Sandstorm Oasis’s “free” plan will be discontinued. Users will still be able to log in for free to access apps and grains owned by other, paying users, but free users will not be able to install their own apps nor create grains. Existing grains owned by free users will remain available for download via the “download backup” function, allowing you to transfer the data to a self-hosted Sandstorm server or manually extract it. However, the grains will no longer be able to start on Oasis unless you upgrade to a paid account.&lt;/p&gt;

&lt;h3 id=&quot;why-do-this&quot;&gt;Why do this?&lt;/h3&gt;

&lt;p&gt;Unfortunately, Oasis does not make enough money to support itself.&lt;/p&gt;

&lt;p&gt;As of this writing, Oasis hosts 2642 monthly active users. This number is actually up in the last few months, despite Sandstorm having put no effort at all into user growth since &lt;a href=&quot;/news/2017-02-06-sandstorm-returning-to-community-roots&quot;&gt;we changed gears in early 2017&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, only 88 of those users have a paid subscription, generating a total of $828 in monthly revenue. Unfortunately, the bare cost of operating Oasis currently comes to about $960 per month, mostly to pay for servers. Additionally, to keep Sandstorm the corporation in existence as a vehicle to operate Oasis costs around an additional $600 per month (for things like taxes, tax preparation, banking fees, etc.). Although these fees don’t technically go to keeping the service running, dissolving Sandstorm the company would almost certainly require shutting down Oasis, and so to keep Oasis running we must pay these fees.&lt;/p&gt;

&lt;p&gt;All told, this means Oasis is running a deficit of $700 per month, which I personally pay out-of-pocket.&lt;/p&gt;

&lt;p&gt;I do not want to shut down Oasis, because I know a lot of people depend on it and use it every day. But, it doesn’t make sense for me personally to pay for compute for every person who signs up. I need each user to pay their share.&lt;/p&gt;

&lt;h3 id=&quot;what-are-the-options-for-existing-users&quot;&gt;What are the options for existing users?&lt;/h3&gt;

&lt;p&gt;If you currently have a free account with data on Sandstorm Oasis, you will need to do one of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Upgrade to a paid plan on Oasis.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sandstorm.io/install&quot;&gt;Switch to a self-hosted Sandstorm server.&lt;/a&gt; You can transfer your grains from Oasis to the new server by downloading a backup of each grain (down-arrow icon in the top bar when the grain is open) and uploading it to the new server. You won’t need to pay Sandstorm anything in this case, but by moving your grains off Oasis, you can help us shut down some servers to save money.&lt;/li&gt;
  &lt;li&gt;Download your data and extract it manually. Sandstorm grain backups are simple zip files containing all of the data the app stored. The format is different from each app – it may be a JSON file, a SQLite database, a MongoDB, etc. You may need special tools and knowledge to extract the data, but it’s all there.&lt;/li&gt;
  &lt;li&gt;Do nothing. Your data will remain intact and can be downloaded at any time. If you aren’t actively using your Oasis account, then you need not take action at this time.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;faq&quot;&gt;FAQ&lt;/h3&gt;

&lt;h4 id=&quot;have-you-considered-a-crowdfunding-campaign&quot;&gt;Have you considered a crowdfunding campaign?&lt;/h4&gt;

&lt;p&gt;Crowdfunding campaigns are harder than they look. Sandstorm ran one early in its life, successfully raising about $60,000. During that time, I had to spend every day for a month and a half going out and selling people on it. We lined up press articles. We had two paid employees pumping out apps. We got on Hacker News several times.&lt;/p&gt;

&lt;p&gt;These days, I have a day job leading development of &lt;a href=&quot;https://blog.cloudflare.com/cloudflare-workers-unleashed/&quot;&gt;Cloudflare Workers&lt;/a&gt; and related projects. Workers is taking off quickly and there’s tons to do to make it better. Alas, I just don’t have time to coordinate another crowdfunding campaign for Sandstorm on the side.&lt;/p&gt;

&lt;h4 id=&quot;can-i-donate-to-sandstorm-via-patreon-or-something&quot;&gt;Can I donate to Sandstorm via Patreon or something?&lt;/h4&gt;

&lt;p&gt;The best way to “donate” to Sandstorm is to sign up for a paid Oasis account. This is already set up, and the payment processing fees we pay to Stripe are much lower than what Patreon and the like would charge. All revenue from Oasis goes directly to paying for operation costs.&lt;/p&gt;

&lt;h4 id=&quot;will-oasis-shut-down-eventually&quot;&gt;Will Oasis shut down eventually?&lt;/h4&gt;

&lt;p&gt;If Oasis remains non-profitable after this change, we’ll eventually have to shut it down. If it pays for itself, I’d like to keep it running, but I cannot make any guarantees. I will, of course, provide plenty of advance warning before shutting it down entirely.&lt;/p&gt;

</description>
				<pubDate>Mon, 27 Aug 2018 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2018-08-27-discontinuing-free-plan</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2018-08-27-discontinuing-free-plan</guid>
			</item>
		
			<item>
				<title>HTTP proxy rewrite and other updates</title>
				<description>&lt;p&gt;Development of Sandstorm continues! Despite now having a day job, I still spent a lot of my free
time working on Sandstorm.&lt;/p&gt;

&lt;p&gt;This past weekend, &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/pull/3038&quot;&gt;I deleted some of the oldest code in Sandstorm&lt;/a&gt;. This is the culmination of a few months of work: ever since early September, I have been working to transition the Sandstorm HTTP proxy from JavaScript to C++. This is the code which receives incoming HTTP requests, authenticates them, and forwards them to the appropriate grain (application instance). This low-level, performance-critical systems code.&lt;/p&gt;

&lt;p&gt;Historically, HTTP proxying was a duty of Sandstorm’s “Shell” server. The Sandstorm Shell is Sandstorm’s user interface, an application written on &lt;a href=&quot;https://meteor.com&quot;&gt;Meteor&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org&quot;&gt;Node&lt;/a&gt;, and is responsible for most of Sandstorm’s business logic. Historically, the other major component of Sandstorm has been the “back end”, written in C++, responsible for running application containers and managing storage. HTTP proxying was done in the shell mostly because this was the most convenient place, building on Node.js’s HTTP library. However, performance (both CPU and memory usage) has been disappointing at best, and &lt;a href=&quot;https://sandstorm.io/news/2016-09-30-fiber-bomb-debugging-story&quot;&gt;a debugging nightmare at worst&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sandstorm now has a third component: the “Gateway”. This component receives all incoming HTTP traffic and forwards it to the appropriate destination. Requests related to Sandstorm’s UI are forwarded on as HTTP to the Shell over an internal Unix domain socket. Requests intended for apps are converted by the Gateway into Cap’n Proto requests and routed to the appropriate app. The Gateway also performs TLS termination (e.g. for users of our &lt;a href=&quot;https://docs.sandstorm.io/en/latest/administering/sandcats/&quot;&gt;free TLS certificates under sandcats.io&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;The Gateway is written in C++, using the &lt;a href=&quot;https://github.com/capnproto/capnproto/blob/master/c++/src/kj/compat/http.h&quot;&gt;KJ HTTP Library&lt;/a&gt;. KJ is the C++ toolkit library originally built as part of the &lt;a href=&quot;https://capnproto.org&quot;&gt;Cap’n Proto&lt;/a&gt; project (itself a sub-project of Sandstorm), but which is beginning to take on a life of its own. KJ HTTP is a low-level yet easy-to-use HTTP client and server library, built on top of the KJ asynchronous framework (think Promises but in C++), all authored by yours truly. KJ HTTP is also used in the implementation of &lt;a href=&quot;https://blog.cloudflare.com/introducing-cloudflare-workers/&quot;&gt;Cloudflare Workers&lt;/a&gt; (the project I lead in my day job), where it has already handled billions of requests.&lt;/p&gt;

&lt;p&gt;We can see the performance improvement for Sandstorm Oasis, our hosting service which runs &lt;a href=&quot;https://github.com/sandstorm-io/blackrock&quot;&gt;a special cluster-scalable version of Sandstorm&lt;/a&gt;. Oasis runs instances of the Sandstorm Shell on dedicated machines, with the ability to add more replicas as needed to handle traffic. Here’s the recent CPU usage history of one such replica:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/http-gateway-cpu-improvement.png&quot; alt=&quot;Graph of shell CPU usage across Gateway deployment.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, introducing the gateway more than halved the CPU usage of the Sandstorm shell. Rather than reduce the number of replicas, I decided to cut the instance size in half. Either way, switching to the C++ Gateway saved money.&lt;/p&gt;

&lt;p&gt;What about the Gateway itself? Where does it run, and how much CPU does it add? Well, historically, Oasis used an nginx instance for ingress, to provide TLS termination and load balancing. With the Gateway introduced, we were able to eliminate nginx from our stack: the Gateway is perfectly capable of handling TLS termination itself, and is able to implement session-affinity load-balancing much more effectively than nginx could due to the Gateway’s intimate knowledge of Sansdtorm internals. Thus, introducing the Gateway did not add any new VM instances to our system: it simply replaced the existing nginx instance. The Gateway’s CPU usage is negligible, using only a few percent of a CPU core. It appears to be on par with nginx, although when the numbers are this low it’s hard to really tell. I did ultimately decide to reduce the Gateway instance from a full CPU core to a half core to save some more cash.&lt;/p&gt;

&lt;p&gt;These changes will roll out in full to self-hosted Sandstorm users on March 11 (the code is in git now, but I won’t have time to roll a release until then). Adventurous users can set &lt;code&gt;EXPERIMENTAL_GATEWAY=true&lt;/code&gt; in their &lt;code&gt;/opt/sandstorm/sandstorm.conf&lt;/code&gt; today, although note that this will give you the implementation as of the previous release two weeks ago, which still uses the old proxy for some things.&lt;/p&gt;

&lt;h3 id=&quot;other-updates&quot;&gt;Other updates&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/xet7&quot;&gt;Lauri Ojansivu&lt;/a&gt; has translated the Sandstorm UI to Finnish, and &lt;a href=&quot;https://github.com/Xia0ben&quot;&gt;Benoit Renault&lt;/a&gt; and &lt;a href=&quot;https://github.com/jeau&quot;&gt;Thierry Pasquier&lt;/a&gt; have translated the Sandstorm UI to French. This means, along with English, Chinese, and Dutch, Sandstorm now supports five languages. &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/blob/master/CONTRIBUTING.md#internationalization-i18n&quot;&gt;Learn how to help translate Sandstorm here.&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;next-up&quot;&gt;Next up&lt;/h3&gt;

&lt;p&gt;Here’s some things I want to work on next:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Improving how app updates work. Today, you receive a notification when an app has been updated, and must explicitly accept the update. This unfortunately means that big Sandstorm servers with lots of users tend to get stuck storing every single historical version of every app forever, since there’s always someone who never updated after some version. I’d like to make updates fully automatic, but this requires some story for users who want to pin an older version, and some way to roll back to and older version in case of breakage.&lt;/li&gt;
  &lt;li&gt;Integrating with Let’s Encrypt, &lt;a href=&quot;https://letsencrypt.org/2017/07/06/wildcard-certificates-coming-jan-2018.html&quot;&gt;once they support wildcard certificates&lt;/a&gt;. Hopefully, this will finally make it easy to run a secure Sandstorm server on your own domain. However, issuing a certificate requires completing a DNS challenge, and Sandstorm currently does not act as a DNS server. So, some manual intervention will likely still be required.&lt;/li&gt;
  &lt;li&gt;Really supporting e-mail. Today, Sandstorm has some limited ability to accept e-mail, but can’t really act as a standalone e-mail server. I’d like to fix this, with the goal of migrating my own personal e-mail off of GMail and onto Sandstorm.&lt;/li&gt;
  &lt;li&gt;Really supporting development workflows, centered around git. I want to be able to host a git repository, code review tools, a reasonable issue tracker, and a CI, all on Sandstorm, and all as separate apps.&lt;/li&gt;
  &lt;li&gt;Making the top bar less ugly. People complain that Sandstorm’s UI is suffocating, especially the black bar across the top. However, Sandstorm’s security model requires that we have a place to hang trusted UI bits – such as the sharing dialog – that is separate from the app proper. Many apps, though, also have their own top bar with app-specific features, creating a double-top-bar effect. What I’d like to do instead is have a single top bar rendered by Sandstorm, but which can be customized by the app to include app-specific controls as well and to look visually consistent with the rest of the app.&lt;/li&gt;
  &lt;li&gt;Many other things!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Want to get involved? &lt;a href=&quot;https://groups.google.com/group/sandstorm-dev&quot;&gt;Join the sandstorm-dev mailing list.&lt;/a&gt; and &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/blob/master/CONTRIBUTING.md&quot;&gt;check out ways to contribute&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Mon, 19 Feb 2018 00:00:00 -0800</pubDate>
                                <link>https://sandstorm.io/news/2018-02-19-http-rewrite-and-more</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2018-02-19-http-rewrite-and-more</guid>
			</item>
		
			<item>
				<title>Sandstorm UI now available in Chinese, Dutch</title>
				<description>&lt;p&gt;As of last week’s Sandstorm release (version 0.216), the Sandstorm UI is (mostly) now internationalized, meaning text has been moved out of the interface into separate translation tables.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/pull/2985&quot;&gt;This work&lt;/a&gt; was mostly done by &lt;a href=&quot;https://github.com/urakagi&quot;&gt;Romulus Urakagi Tsai&lt;/a&gt; and &lt;a href=&quot;https://github.com/caasi&quot;&gt;Caasi Huang&lt;/a&gt;, supported by &lt;a href=&quot;http://g0v.tw&quot;&gt;g0v.tw&lt;/a&gt;. Additionally, they contributed translation tables for Traditional Chinese, as well as a partial translation to Simplified Chinese (though the latter is still incomplete).&lt;/p&gt;

&lt;p&gt;With i18n in place, other Sandstorm users immediately began work on other translations. In this week’s release (0.218), we’ve merged a &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/pull/2999&quot;&gt;Dutch translation&lt;/a&gt; by &lt;a href=&quot;https://github.com/m-burg&quot;&gt;Michel van der Burg&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Would you like to contribute a Sandstorm translation? It’s easy – no programming required. Check out &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/blob/master/CONTRIBUTING.md#internationalization-i18n&quot;&gt;the contributing guide&lt;/a&gt; for instructions, and talk to us on &lt;a href=&quot;https://groups.google.com/group/sandstorm-dev&quot;&gt;the sandstorm-dev mailing list&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Sat, 28 Oct 2017 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2017-10-28-i18n</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2017-10-28-i18n</guid>
			</item>
		
			<item>
				<title>We're changing the way identities work</title>
				<description>&lt;p&gt;&lt;strong&gt;UPDATE September 2, 2017:&lt;/strong&gt; &lt;em&gt;This change has been fully released and will roll out to all servers within the next 24 hours.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Over the next few weeks, I’ll be making a major change to the way Sandstorm handles user accounts and identities. My goal is to make things far less confusing.&lt;/p&gt;

&lt;p&gt;Most Sandstorm users probably have no idea that these features exist, and so won’t notice the change. However, if you’ve linked multiple “identities” (multiple e-mail, Google, or GitHub accounts) to your Sandstorm account, you may want to read this.&lt;/p&gt;

&lt;h3 id=&quot;history-the-current-system-and-why-it-was-built-this-way&quot;&gt;History: The current system and why it was built this way&lt;/h3&gt;

&lt;p&gt;Way back in late 2015, we introduced the concept of “multiple identities” in Sandstorm. Ever since, a user account on a Sandstorm server has been able to have multiple identities attached to it, each with a different profile (name, picture, etc.). Once a user has multiple identities, they can choose which identity to act as when using apps. When users share with each other, they often do so “by identity”, meaning you choose the identity (not the account) with whom you want to share. It’s even possible for multiple accounts to share a common identity, in order to have multiple people “acting as” the same persona.&lt;/p&gt;

&lt;p&gt;When we designed this system, we were attempting to solve several different problems at once:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We had long offered users the ability to log in with Google, GitHub, or e-mail. Sometimes, though, people wanted to attach multiple login mechanisms to the same account, e.g. both their Google and their GitHub account. This redundancy can protect people against one of these services being down, and would help avoid confusion when people can’t remember which login mechanism they used last time. We also anticipated that in the future, Sandstorm apps might want to talk to Google and GitHub APIs, and this access would be authenticated through the user’s connected accounts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We wanted to ensure that the user ID seen by an app was a global identifier – meaning it would be the same even if the app was moved to a different Sandstorm server. This required that the ID be derived from the user’s credentials, e.g. a hash of their Google or GitHub user ID.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When users share with each other, we wanted them to be able to do so using well-known public identifiers, for additional security. Typically, Sandstorm users share with each other by creating and sending “secret links”; anyone who receives the link can get access. This is convenient, but sometimes you want some additional assurance that a link can’t be leaked. In that case, you might want to specify a specific GitHub username or Google account e-mail address with whom to share, and have Sandstorm guarantee that the receiver must authenticate as that identity to open the link.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We wanted people to be able to manage multiple “personas” with which they interact with other users within Sandstorm. We imagined that users may in fact want to prevent other users from discovering that these personas belonged to the same physical person. We imagined that this would in particular be useful to groups who fear harassment and abuse, and therefore choose to interact under a pseudonym.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We wanted multiple users to be able to collectively manage a shared persona, like a “brand account” on Twitter, while keeping independent Sandstorm accounts.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With all of these goals mashed together, we came up with a design: We would allow you to connect multiple credentials (e.g. Google, GitHub, e-mail, even multiple of each) to your account. Each connected credential became an “identity”, with its own profile (name, picture, and other details shown to users you collaborate with). Each identity could also be marked as being for authentication (in which case you could use it to log into your account) or not (in which case you couldn’t use it to log in, but you could use it as a persona and a sharing target). Non-login identities could also be shared between multiple accounts. Whenever you interacted with a grain, you would choose which identity you wanted to act as, which determined how collaborators saw you.&lt;/p&gt;

&lt;h3 id=&quot;why-it-didnt-work&quot;&gt;Why it didn’t work&lt;/h3&gt;

&lt;p&gt;In retrospect, it was a mistake to try to solve all of these problems at the same time, as they are all fundamentally different. By trying to link them together, we largely failed to solve any of them.&lt;/p&gt;

&lt;p&gt;The idea that your Google and GitHub accounts each represented a different “identity” confused many users. Most people in fact only have one persona, and their accounts on various services represent that same persona. But if you attached both to your Sandstorm account, then Sandstorm would begin asking you to choose which identity you wished to act as – a question that made no sense to most people. Moreover, other people, when sharing with you, would begin to see multiple “copies” of you showing up in their contacts list – one for each credential. Often it was hard for people to tell what the difference was or which they should choose. Because of this confusion, the Sandstorm team has tended to steer people away from linking multiple identities in the first place. Obviously, this defeats the goals for which multi-identity was created.&lt;/p&gt;

&lt;p&gt;Meanwhile, for people who actually wanted to manage multiple personas – pseudonyms, brand identities, etc. – we never managed to provide a good experience. It was very easy to accidentally use the wrong identity and reveal yourself. At the same time, the need to support this use case often exacerbated the confusion for users who only had one logical persona (as described in the previous paragraph). Without this design constraint, we could make a better UX for most people.&lt;/p&gt;

&lt;p&gt;Finally, in practice this design didn’t really solve the ability to move grains between Sandstorm servers, because different Sandstorm servers may very well use totally different login mechanisms. Often, people want to transition grains from Oasis – where they used e-mail login – to a new self-hosted server – where they used LDAP or SAML login. Since the login mechanisms differed, user IDs didn’t match up anyway. To really solve this problem, we need something more dynamic.&lt;/p&gt;

&lt;h3 id=&quot;what-were-doing-instead&quot;&gt;What we’re doing instead&lt;/h3&gt;

&lt;p&gt;We are dropping support for multiple “personas”. Going forward, each Sandstorm account will have only one profile – one name, one profile picture, one entry in the sharing auto-complete list, etc. If you have multiple identities today, the profile from exactly one of those identities will become your account profile, and the other profiles will disappear. If you’re worried about which one Sandstorm will take, make sure to edit all your identities so that their profiles are the same.&lt;/p&gt;

&lt;p&gt;What we call “identities” today will be renamed to “credentials”. A credential will no longer have its own profile, and you will no longer need to choose which credential you are acting as when accessing grains. Authentication-related features of credentials (for login, and for secure sharing) will remain mostly intact.&lt;/p&gt;

&lt;p&gt;Users who rely on the ability to manage multiple personas today will need to transition to using multiple accounts instead. I suspect that there are vanishingly few such users, as most users never understood Sandstorm’s identity system in the first place. That said, if you are affected, I apologize. I would love it if you would &lt;a href=&quot;/community&quot;&gt;get in contact with us&lt;/a&gt; to let us know about your specific needs, so that we can try to design a better experience for you. (For what it’s worth, I personally recommend using the multi-profile feature provided by various browsers to separate your personas into totally separate browser contexts with different window themes – this makes it much easier to prevent accidental leakage.)&lt;/p&gt;

&lt;p&gt;Finally, we will be disassociating the user ID as seen by apps from the underlying user credentials. In the future, each grain will actually see a totally unique ID for each user. When a grain is transferred between servers, the owner will have the opportunity to remap users in arbitrary ways – though by default we’ll correlate based on verified e-mail address. This scheme has the additional benefit that because a particular user’s ID will be different in every grain they access, it will no longer be possible for apps to illicitly identify and correlate users by their IDs. Instead, they will have to use explicit APIs for this purpose, which can be carefully controlled for privacy.&lt;/p&gt;

&lt;h3 id=&quot;timeline&quot;&gt;Timeline&lt;/h3&gt;

&lt;p&gt;As of this post, these changes have not yet been implemented. We wanted to let people know of the changes in advance, in case anyone is relying on the current behavior. The next Sandstorm update will include code which detects users who might be affected and notifies them to read this blog post. The full change will probably take several weeks or maybe months to implement, as it is a huge change. We’ll update this post when it’s done.&lt;/p&gt;
</description>
				<pubDate>Mon, 08 May 2017 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2017-05-08-refactoring-identities</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2017-05-08-refactoring-identities</guid>
			</item>
		
			<item>
				<title>The Sandstorm Team is joining Cloudflare</title>
				<description>&lt;p&gt;Recently, we announced that &lt;a href=&quot;https://sandstorm.io/news/2017-02-06-sandstorm-returning-to-community-roots&quot;&gt;Sandstorm is returning to its community roots&lt;/a&gt;, transitioning away from being a for-profit startup and towards being a community-effort, open source project. The Sandstorm team is committed to keep building Sandstorm in collaboration with our amazing community, and we will keep operating Sandstorm Oasis as a service. But, Sandstorm will no longer be our full-time jobs.&lt;/p&gt;

&lt;p&gt;So, what will be?&lt;/p&gt;

&lt;p&gt;Starting today, most of the Sandstorm team – including Jade and myself – now work for Cloudflare.&lt;/p&gt;

&lt;p&gt;Sandstorm has actually been a user of Cloudflare since the beginning. Our web site and static parts of Oasis are served through them. I’ve long been a fan of Cloudflare’s focus on security. A few years back, I enjoyed their &lt;a href=&quot;https://blog.cloudflare.com/answering-the-critical-question-can-you-get-private-ssl-keys-using-heartbleed/&quot;&gt;Heartbleed Challenge&lt;/a&gt; which proved conclusively that, yes, private keys can be leaked by Heartbleed. Although Cloudflare recently suffered from &lt;a href=&quot;https://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/&quot;&gt;a widely-reported security incident&lt;/a&gt;, their response was impressively fast and transparent.&lt;/p&gt;

&lt;p&gt;But a bigger reason I’m excited about joining Cloudflare is that they are big users – perhaps the biggest users – of &lt;a href=&quot;https://capnproto.org&quot;&gt;Cap’n Proto&lt;/a&gt;, the serialization and RPC framework developed by Sandstorm. Cloudflare actually &lt;a href=&quot;https://blog.cloudflare.com/introducing-lua-capnproto-better-serialization-in-lua/&quot;&gt;developed the Lua bindings for Cap’n Proto&lt;/a&gt; and has &lt;a href=&quot;http://www.thedotpost.com/2015/06/john-graham-cumming-i-got-10-trillion-problems-but-logging-aint-one&quot;&gt;spoken publicly about using Cap’n Proto in their logging pipeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sandstorm, for its part, remains an independent entity, and I won’t be working on it during my day job at Cloudflare. However, I will be working on Cap’n Proto. This should be good news for Cap’n Proto fans who have been disappointed by the lack of releases lately. Although Sandstorm uses Cap’n Proto extensively, in our scramble to build Sandstorm we tended to commit changes only to git master while neglecting to build (and test) formal releases. With a larger corporate backer, we can now afford to be more professional, doing more frequent releases, and putting effort into supporting more languages and platforms.&lt;/p&gt;

&lt;p&gt;I will also be working on building some fascinating new infrastructure at Cloudflare. As a member of the edge platform team, I’ll be coming up with new ways to utilize Cloudflare’s machines located in over a hundred data centers around the world. Jade, meanwhile, will be working on building out Cloudflare’s community and developer advocacy program.&lt;/p&gt;

&lt;p&gt;The Sandstorm community can expect to see me merging pull requests and pushing releases on weekends, with new releases at least every three weeks. There has been a flurry of activity lately around mobilizing community contributions. Join the discussion on &lt;a href=&quot;https://groups.google.com/forum/#!forum/sandstorm-dev&quot;&gt;the sandstorm-dev mailing list&lt;/a&gt; or on &lt;a href=&quot;https://kiwiirc.com/client/irc.freenode.net/?channel=#sandstorm&quot;&gt;IRC (#sandstorm on Freenode)&lt;/a&gt;!&lt;/p&gt;
</description>
				<pubDate>Mon, 13 Mar 2017 00:00:00 -0700</pubDate>
                                <link>https://sandstorm.io/news/2017-03-13-joining-cloudflare</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2017-03-13-joining-cloudflare</guid>
			</item>
		
			<item>
				<title>Sandstorm gets a security review</title>
				<description>&lt;p&gt;Sandstorm recently underwent a security review by &lt;a href=&quot;http://devco.re/&quot;&gt;DevCore Inc.&lt;/a&gt;, commissioned by Department of Cyber Security of Taiwan. The company has in the past found RCEs in big-name services like &lt;a href=&quot;https://hackerone.com/reports/125980&quot;&gt;Uber&lt;/a&gt; and &lt;a href=&quot;http://devco.re/blog/2016/04/21/how-I-hacked-facebook-and-found-someones-backdoor-script-eng-ver/&quot;&gt;Facebook&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Although the full report is not public (and is not in English), Taiwan’s Digital Minister, &lt;a href=&quot;https://en.wikipedia.org/wiki/Audrey_Tang&quot;&gt;Audrey Tang&lt;/a&gt;, tells us that overall DevCore feels Sandstorm has “excellent security design.”&lt;/p&gt;

&lt;p&gt;As would be expected of any good security review, DevCore did find several issues. Last night we released build 0.203 to fix them. All servers should automatically update within 24 hours of the release (by midnight tonight, PST), but if you’d like to speed up the process (or if you have disabled automatic updates), you can SSH into your server now and type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo sandstorm update
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;vulnerabilities-discovered-and-fixed&quot;&gt;Vulnerabilities Discovered (and fixed)&lt;/h3&gt;

&lt;h4 id=&quot;1-insufficient-e-mail-address-validation&quot;&gt;1. Insufficient e-mail address validation&lt;/h4&gt;

&lt;p&gt;When logging in with an e-mail address, a user could enter an address like “foo@evil.com,bar@example.com”. In this case, login e-mails would be sent to &lt;em&gt;both&lt;/em&gt; addresses, while Sandstorm would treat the user as if they were a member of the latter domain, “example.com”. Hence, an attacker could specify their real address as the first address and a fake address at a domain of their choice as the second, in order to appear to be a member of the domain. Servers that use Sandstorm’s organizational features (until recently only available as part of the &lt;a href=&quot;https://sandstorm.io/news/2017-02-06-sandstorm-returning-to-community-roots&quot;&gt;now-defunct&lt;/a&gt; product “Sandstorm for Work”) can be configured to automatically promote members of a domain to full users, allowing them to install apps, create grains, and discover the identities of other members of the organization. Such users would &lt;strong&gt;not&lt;/strong&gt; receive access to any other grains on the server, but an attacker could install their own apps that consume the server’s resources, including CPU, RAM, and disk. An attacker could also combine this vulnerability with one of the others below, all of which require full user status as a starting point.&lt;/p&gt;

&lt;p&gt;The root cause of this bug is Sandstorm’s use of a library called Nodemailer to send e-mail. It turns out that Nodemailer “helpfully” interprets comma-separated lists of addresses as multiple addresses. This is true even if the string is already part of an array. For instance, say you pass the following array in the &lt;code&gt;to&lt;/code&gt; field of a mail sent via Nodemailer:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[ &quot;foo@example.com&quot;,
  &quot;bar@example.com,baz@example.com&quot;,
  { name: &quot;Garply&quot;, address: &quot;qux@example.com,corge@example.com&quot; } ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Surprisingly, this three-element array will send e-mail to &lt;em&gt;five&lt;/em&gt; addresses – foo@, bar@, baz@, qux@, and corge@.&lt;/p&gt;

&lt;p&gt;We did not anticipate this feature and assumed that Nodemailer would fail to send e-mail to an invalid address.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Severity:&lt;/strong&gt; Moderate &lt;strong&gt;if&lt;/strong&gt; Sandstorm is configured with an organization defined by e-mail domain. If you do not define an organization, or if you define it by LDAP, SAML, or G Suite domain, then we do not believe this bug can be meaningfully exploited.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Sandstorm now performs its own validation of addresses to ensure, among other things, that no separator characters are accepted and only one @-sign is allowed. Fixed in commit &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/commit/37bd9a7f4eb776cdc2d3615f0bfea1254b66f59d&quot;&gt;37bd9a7&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;2-insufficient-path-validation-when-building-zip-backups&quot;&gt;2. Insufficient path validation when building ZIP backups&lt;/h4&gt;

&lt;p&gt;The owner of a Sandstorm grain can download a backup of the grain’s content in ZIP format. Sandstorm shells out to the &lt;code&gt;zip&lt;/code&gt; utility to build this archive, but does so inside a sandbox designed to prevent exploitation of bugs in the utility.&lt;/p&gt;

&lt;p&gt;Unfortunately, a combination of factors resulted in the possibility of a minor data leak:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The list of files to include in the archive is passed to &lt;code&gt;zip&lt;/code&gt; on standard input, delimited by newlines. However, it is possible for a filename to contain a newline character. Sandstorm actually checked for this, but accidentally failed to perform the check in one code path triggered by the existence of an empty directory.&lt;/li&gt;
  &lt;li&gt;The zip sandbox carefully hid sensitive directories like &lt;code&gt;/var&lt;/code&gt;, &lt;code&gt;/proc&lt;/code&gt;, and even &lt;code&gt;/etc&lt;/code&gt;. However, after the zip sandbox was written, two new directories, &lt;code&gt;/etc.host&lt;/code&gt; and &lt;code&gt;/run.host&lt;/code&gt;, which are aliases for the host system’s &lt;code&gt;/etc&lt;/code&gt; and &lt;code&gt;/run&lt;/code&gt;, were added. Unfortunately, the zip sandbox was not updated to hide these directories, hence they were visible to the zip program.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As a result of this, a user could create a grain containing an empty directory named &lt;code&gt;/var/blah\n/etc.host/passwd&lt;/code&gt;, save a backup, and find the backup contained a copy of the host’s &lt;code&gt;/etc/passwd&lt;/code&gt; file (which, despite its name, does not contain passwords, but does contain a list of local user accounts).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Severity:&lt;/strong&gt; Low. An attacker who has full user status (permission to create grains) can read files located in the server’s &lt;code&gt;/etc&lt;/code&gt; and &lt;code&gt;/run&lt;/code&gt; directories that are set world-readable (or specifically readable to the Sandstorm service account). No other host system directories are exposed. Usually, any files under &lt;code&gt;/etc&lt;/code&gt; that contain sensitive secrets would be hidden from all users except root, hence would not be readable by Sandstorm nor by the attacker.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; We have fixed the validation of filenames so that newlines are never permitted, and we have enhanced the zip sandbox to use a whitelist of top-level directories rather than a blacklist. Fixed in commits &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/commit/4ea8df7403381d9b657b121b3c98d8081b27414d&quot;&gt;4ea8df7&lt;/a&gt; and &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/commit/6e8572ea8bb56d0216bb1b410e5040edc051b120&quot;&gt;6e8572e&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;3-server-side-request-forgery&quot;&gt;3. Server-side request forgery&lt;/h4&gt;

&lt;p&gt;Apps running on Sandstorm can make outgoing HTTP requests through a few mechanisms. Additionally, users can instruct Sandstorm to download an app package file from an arbitrary URL. Sandstorm did not attempt to prevent these requests from reaching localhost or private network destinations. Because of this, a full user of the Sandstorm server (but not a visitor) could probe the internal network on which the Sandstorm server was hosted, as well as services exposed to localhost on the server itself.&lt;/p&gt;

&lt;p&gt;This is a problem if unprotected services are exposed to the Sandstorm server &lt;em&gt;and&lt;/em&gt; you have invited users to your server who should not be trusted to access those services. Sandstorm itself does not expose any unprotected services to localhost, so some other service must be running locally to cause a problem. Only HTTP requests are possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Severity:&lt;/strong&gt; High &lt;strong&gt;if&lt;/strong&gt; unprotected HTTP services are visible to the Sandstorm server &lt;em&gt;and&lt;/em&gt; you have invited users to your server who should not be trusted to access those services. Otherwise, low. Sandstorm itself does not expose any unprotected services to localhost, so some other service must be running locally to cause a problem. Only HTTP requests are possible.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Sandstorm now allows the server admin to configure an IP address blacklist. User-initiated requests will not be allowed from these addresses. By default, standard private network address ranges are blacklisted. Annoyingly, this “fix” is likely to break some servers who use private app indexes, but avoiding such breakage would mean leaving others vulnerable. Admins will need to update their blacklists accordingly. Fixed in commit &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/commit/164997fb958effbc90c5328c166706280a84aaa1&quot;&gt;164997f&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;4-failure-to-mitigate-linux-kernel-cve-2017-6074&quot;&gt;4. Failure to mitigate Linux kernel CVE-2017-6074&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;(This was caught by Sandstorm core developer &lt;a href=&quot;https://github.com/dwrensha&quot;&gt;David Renshaw&lt;/a&gt;, not by DevCore, but is fixed in the same release.)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A recent Linux kernel bug could allow a malicious app to cause a kernel panic or perhaps break out of its sandbox. The bug is in Linux, but Sandstorm aims to protect against such bugs via seccomp. &lt;a href=&quot;https://docs.sandstorm.io/en/latest/using/security-non-events/#linux-kernel&quot;&gt;Historically, Sandstorm’s sandbox has been very successful at blocking Linux vulnerabilities before they are discovered.&lt;/a&gt; However, this one slipped through. On Sandstorm, the published PoC exploit for this bug only causes a kernel panic (not a sandbox breakout), but a developer with deep understanding of the bug and the Linux kernel might be able to create a successful attack in other ways.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Severity:&lt;/strong&gt; High if you permit users you don’t trust to install apps on your server, or commonly install apps from untrustworthy sources, and you do not keep your kernel up-to-date.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fix:&lt;/strong&gt; Sandstorm’s seccomp filter has been updated to prohibit the creation of DCCP sockets. Fixed in commit &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/commit/34749f9c0141a89680860b15433e8ac9dbdbbb62&quot;&gt;34749f9&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;We are excited to have received such a thorough security review. Some of the problems discovered were very obscure and we’re impressed that DevCore was able to find them. We thank Audrey Tang and the Department of Cyber Security of Taiwan for commissioning this review.&lt;/p&gt;
</description>
				<pubDate>Thu, 02 Mar 2017 00:00:00 -0800</pubDate>
                                <link>https://sandstorm.io/news/2017-03-02-security-review</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2017-03-02-security-review</guid>
			</item>
		
			<item>
				<title>Impact of Cloudflare security advisory on Sandstorm Oasis</title>
				<description>&lt;p&gt;A few days ago, Cloudflare &lt;a href=&quot;https://blog.cloudflare.com/incident-report-on-memory-leak-caused-by-cloudflare-parser-bug/&quot;&gt;disclosed a security bug&lt;/a&gt; in their services which may have leaked secrets from sites which use Cloudflare. Sandstorm uses Cloudflare as a cache in front of our web site and Sandstorm Oasis, and so some of our users have asked if this problem affects them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR:&lt;/strong&gt; If you uploaded or downloaded a grain backup (zip file) between September 22, 2016 and February 18, 2017 (more so between Feb 13 to Feb 18), there is a very remote chance that some portion of the content of your backup could have been leaked to a third party, due to a bug in Cloudflare. We suspect, but cannot say for sure, that no such leakage occurred. We believe that no data other than grain backups could have leaked.&lt;/p&gt;

&lt;h3 id=&quot;details&quot;&gt;Details&lt;/h3&gt;

&lt;p&gt;We believe that Sandstorm services are mostly unaffected (with the exception of grain backups, described below). We intentionally divide our services such that public, static content is served from different hosts from dynamic/private content. We only enable Cloudflare in front of the public, static content (to provide caching and faster delivery). Moreover, the public, static hosts avoid storing sensitive credentials in cookies.&lt;/p&gt;

&lt;p&gt;Specifically, we have Cloudflare enabled on the following hosts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;sandstorm.io&lt;/strong&gt;, which serves our public web site. There are no secrets here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;docs.sandstorm.io&lt;/strong&gt;, which serves our public documentation. There are no secrets here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;dl.sandstorm.io&lt;/strong&gt;, from which Sandstorm install packages and updates are served. There are no secrets here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;oasis.sandstorm.io&lt;/strong&gt;, which serves the static HTML, Javascript, CSS, and images for Sandstorm Oasis. Dynamic content in the Sandstorm UI is delivered – and user actions are communicated – via a WebSocket on ddp.oasis.sandstorm.io, which does not use Cloudflare. The user’s authentication token is stored in localStorage rather than a cookie and is only ever transmitted over the WebSocket. Sandstorm apps are served from randomly-generated subdomains of oasis.sandstorm.io, which are not served through Cloudflare. However, grain backup uploads and downloads occur on the main host and could be affected – see below.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;app-index.sandstorm.io&lt;/strong&gt;, which serves public Sandstorm app packages and metadata for use by the app market and for implementing automatic updates. There are no secrets here.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;apps.sandstorm.io&lt;/strong&gt;, which serves the static HTML, Javascript, CSS, and images for our app market. As with Oasis, dynamic content and interaction (mainly, reading/posting reviews) happens via a WebSocket on apps-ddp.sandstorm.io and credentials are stored in localStorage.&lt;/li&gt;
  &lt;li&gt;Various internal testing hosts and hosts that only redirect to other hosts.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We chose this design because we rely on Cloudflare only for caching purposes. Since dynamic data cannot be cached anyway, it made sense to form direct connections for that data rather than pass through a proxy, both to reduce our TCB and to improve performance. On the other hand, this means we cannot fully take advantage of Cloudflare’s security features such as its Web Application Firewall and DDoS protection, but we felt comfortable with this trade-off.&lt;/p&gt;

&lt;p&gt;That said, we’ve identified one notable exception to our design: When you download a backup of a grain via the Sandstorm Oasis UI, or upload a backup to be restored, the zip file is transmitted through the main Oasis host, proxied through Cloudflare. This seems to be an oversight; it would make sense for these requests to go through the DDP host (I’ve prepared &lt;a href=&quot;https://github.com/sandstorm-io/sandstorm/pull/2877&quot;&gt;a pull request&lt;/a&gt; to fix this). These transfers are authorized via short-lived tokens, so there’s no risk of Oasis credentials being leaked. However, the contents of a .zip file could possibly have been leaked by Cloudflare.&lt;/p&gt;

&lt;p&gt;Cloudflare reports that the bug existed between 2016-09-22 and 2017-02-18, with the greatest potential impact being in the last four days of that period. If you uploaded or downloaded a grain backup in that time, it could have been leaked. However, Cloudflare reports that the incidence of such leaks was extremely small, and each instance would have leaked data from an essentially random website served by Cloudflare, of which there are many (Cloudflare handles some 10% of all internet traffic). Given the probabilities, it is likely that no Sandstorm grain backup data was actually leaked. There is also so far no evidence that anyone was actively exploiting this bug.&lt;/p&gt;

&lt;p&gt;With all that said, if you are worried about the possibility that your data was leaked, the proper course of action depends on the app and grain involved. Sandstorm is explicitly designed to keep credentials out of the hands of apps, so usually the only sensitive information in a grain backup is information that you gave to it yourself. For example, if you had an Etherpad document where you kept a list of passwords (and you downloaded a backup of that document recently), you may want to change those passwords. Otherwise, there is nothing to do.&lt;/p&gt;

&lt;h3 id=&quot;editorial&quot;&gt;Editorial&lt;/h3&gt;

&lt;p&gt;Bugs like this probably exist in a lot of software. The Cloudflare bug is notable because:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It was discovered. (Most bugs aren’t.)&lt;/li&gt;
  &lt;li&gt;Cloudflare handles some 10% of all internet traffic, meaning that basically everyone on the internet is possibly affected.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;It’s important to keep in mind that security is not binary. Security is about risk management. The Cloudflare bug did not change anyone’s security level from “secure” to “insecure” – instead, it increased the likelihood of any particular person becoming the victim of a real attack from, say, 5.26% to 5.28% (numbers made up to illustrate point). Had Cloudflare been slow to respond once the vulnerability was found, this risk may have shot up. Fortunately, though, they were anything but.&lt;/p&gt;

&lt;p&gt;Now, consider the use of password-based authentication. Nearly every service on the web uses it. However, it is demonstrably horribly insecure: Not only do people regularly use bad passwords or reuse the same password across sites, but passwords stored in a database (even if hashed) make it much easier for attackers to escalate a read-only database snapshot into full access privileges (possibly even to sites other than the one attacked). By requiring the user to receive an authentication code by e-mail each time they log in from a new location, a service can hugely reduce their users’ risk of compromise – probably by an order of magnitude! By this measure, bare password-based authentication should be considered a vulnerability, and a much more serious one than Cloudflare’s bug.&lt;/p&gt;

&lt;p&gt;And yet, people accept passwords because they are more convenient than other mechanisms. &lt;em&gt;(Well, many people do. Sandstorm does not implement passwords.)&lt;/em&gt; So, we admit that security is not absolute, but rather a trade-off which needs to be judged against other factors. We need to weigh the risks of our infrastructure being insecure against the value that infrastructure brings – and Cloudflare certainly brings a lot of value. That said, with good design, it’s often possible to reduce and contain risks without sacrificing too much utility. This is one of the core goals of Sandstorm – to introduce an &lt;a href=&quot;https://sandstorm.io/how-it-works&quot;&gt;infrastructure model&lt;/a&gt; and &lt;a href=&quot;https://docs.sandstorm.io/en/latest/using/security-practices/&quot;&gt;security practices&lt;/a&gt; which &lt;a href=&quot;https://docs.sandstorm.io/en/latest/using/security-non-events/&quot;&gt;mitigate risks&lt;/a&gt;.&lt;/p&gt;
</description>
				<pubDate>Tue, 28 Feb 2017 00:00:00 -0800</pubDate>
                                <link>https://sandstorm.io/news/2017-02-28-cloudbleed</link>
                                <guid isPermaLink="true">https://sandstorm.io/news/2017-02-28-cloudbleed</guid>
			</item>
		
	</channel>
</rss>
